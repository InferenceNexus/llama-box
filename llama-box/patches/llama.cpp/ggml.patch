diff --git a/ggml/include/ggml-metal.h b/ggml/include/ggml-metal.h
index b8d3f678..7d893f0b 100644
--- a/ggml/include/ggml-metal.h
+++ b/ggml/include/ggml-metal.h
@@ -59,6 +59,8 @@ GGML_API bool ggml_backend_metal_supports_family(ggml_backend_t backend, int fam
 // capture all command buffers committed the next time `ggml_backend_graph_compute` is called
 GGML_API void ggml_backend_metal_capture_next_compute(ggml_backend_t backend);
 
+GGML_API void ggml_backend_metal_get_device_memory(ggml_backend_t backend, size_t * free_mem, size_t * total_mem);
+
 GGML_API ggml_backend_reg_t ggml_backend_metal_reg(void);
 
 #ifdef __cplusplus
diff --git a/ggml/src/ggml-metal.m b/ggml/src/ggml-metal.m
index 04ec5117..314bf6f7 100644
--- a/ggml/src/ggml-metal.m
+++ b/ggml/src/ggml-metal.m
@@ -2604,7 +2604,6 @@ static void ggml_metal_encode_node(
             } break;
         case GGML_OP_GROUP_NORM:
             {
-                GGML_ASSERT(ne00 % 4 == 0);
                 GGML_ASSERT(ggml_is_contiguous(src0));
 
                 float eps;
@@ -4076,6 +4075,10 @@ static void ggml_backend_metal_device_get_memory(ggml_backend_dev_t dev, size_t
     }
 }
 
+void ggml_backend_metal_get_device_memory(ggml_backend_t backend, size_t *free, size_t *total) {
+    ggml_backend_metal_device_get_memory(backend->device, free, total);
+}
+
 static enum ggml_backend_dev_type ggml_backend_metal_device_get_type(ggml_backend_dev_t dev) {
     return GGML_BACKEND_DEVICE_TYPE_GPU;
 
